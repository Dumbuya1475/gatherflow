/* generated using openapi-typescript-codegen -- do not edit */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
/**
 * A **Receipt** is a record of entitlements generated by Monime whenever a payment completes successfully.
 * It serves as proof of what the customer is entitled to claim — such as tickets, vouchers, credits, or digital rights.
 * Receipt links a **payment** via an order to **entitlement claims**, enabling both verification and controlled redemption via APIs.
 *
 * ### Use Cases
 *
 * - **Purchase Verification**
 * Confirm that a customer’s payment went through and display transaction details in your app without manual reconciliation.
 *
 * - **Ticket & Voucher Redemption**
 * Use receipts as redeemable proof of access — for example, scanning a receipt at an event gate or validating a voucher at checkout.
 *
 * - **Partial Consumption**
 * Support use cases where receipts hold multiple entitlements, such as ride credits or digital assets, and allow them to be redeemed incrementally.
 *
 *
 */
export type Receipt = {
    /**
     * Lifecycle status of the receipt.
     */
    status?: Receipt.status;
    /**
     * Human friendly name of the order.
     */
    orderName?: string | null;
    /**
     * Human-friendly order number.
     */
    orderNumber?: string;
    /**
     * Total order amount in minor units and currency.
     */
    orderAmount?: {
        /**
         * The [3-letter](https://en.wikipedia.org/wiki/ISO_4217) ISO currency code. Currently supported: 'SLE', 'USD'
         */
        currency?: string;
        /**
         * The value representation in the currency's minor unit. E.g. For 1 Leone (SLE 1), the value should be 100, denoting cents, the minor unit.
         */
        value?: number;
    };
    /**
     * The timestamp when the receipt was created.
     */
    createTime?: string;
    /**
     * The last timestamp when the receipt was updated.
     */
    updateTime?: string;
    /**
     * Entitlements granted by this receipt; each can be redeemed until exhausted.
     */
    entitlements?: Array<{
        /**
         * Stable entitlement key (e.g., SKU, ticket_type, or any unique product identifier).
         */
        key?: string;
        /**
         * Human-friendly name of the entitlement.
         */
        name?: string | null;
        /**
         * Maximum number of times this entitlement can be redeemed.
         */
        limit?: number;
        /**
         * Number of times this entitlement has been redeemed so far.
         */
        current?: number;
        /**
         * Number of redemptions still available (limit - current).
         */
        remaining?: number;
        /**
         * True if the entitlement has no remaining redemptions (i.e. current == limit).
         */
        exhausted?: boolean;
    }> | null;
    /**
     * Optional metadata for attaching context or tracking info.
     */
    metadata?: Record<string, any> | null;
};
export namespace Receipt {
    /**
     * Lifecycle status of the receipt.
     */
    export enum status {
        NOT_REDEEMED = 'not_redeemed',
        PARTIALLY_REDEEMED = 'partially_redeemed',
        FULLY_REDEEMED = 'fully_redeemed',
    }
}

