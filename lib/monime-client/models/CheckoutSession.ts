/* generated using openapi-typescript-codegen -- do not edit */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { CoreresourcesParentOwningObject } from './CoreresourcesParentOwningObject';
/**
 * A **Checkout Session** represents a Monime-hosted payment flow where customers complete purchases for a defined set of items.
 * It is designed for **e-commerce** and **embedded payment scenarios** where merchants want a simple, secure way to accept payments across multiple channels without building the payment UI themselves.
 *
 * Unlike direct API-based payments, a Checkout Session aggregates **multiple payment methods** — such as **Mobile Money**, **Card**, and **Bank Transfers** — and presents them in a unified checkout experience.
 *
 * ---
 *
 * ### Use Cases
 *
 * - **E-Commerce Cart Checkout**
 * A customer selects items in a cart. The merchant creates a Hosted Checkout Session, and Monime presents Mobile Money, Card, and Bank options in one unified flow.
 *
 * - **Embedded SaaS Billing**
 * A SaaS platform embeds a Hosted Checkout Session to bill users. Customers pick their preferred channel (Card, MoMo, Bank), and once payment is confirmed, the SaaS receives `checkout_session.completed`.
 *
 * - **QR or Link-Based Payment**
 * Merchants generate a checkout session link or QR code. Customers open the hosted page and choose any available payment method.
 *
 * - **Fallback Across Methods**
 * If a user’s card payment fails, they can seamlessly retry with Mobile Money — all within the same checkout session.
 *
 */
export type CheckoutSession = {
    /**
     * Unique identifier of the checkout session.
     */
    id?: string;
    /**
     * Title or label for the checkout session. Used for display in customer-facing UIs.
     */
    name?: string;
    /**
     * **Status** of the checkout session. Possible values:
     * - pending: Awaiting initiation.
     * - completed: Checkout completed successfully.
     * - cancelled: User cancelled the session.
     * - expired: Session expired due to inactivity.
     */
    status?: CheckoutSession.status;
    /**
     * Internally generated order number that uniquely identifies the payment associated to this checkout session.
     */
    orderNumber?: string | null;
    /**
     * Optional external reference identifier (e.g., order ID) used to link this session with the developer’s backend system.
     */
    reference?: string | null;
    /**
     * Optional long-form description explaining the purpose or context of the checkout session.
     */
    description?: string | null;
    /**
     * The URL where the customer should be redirected to begin the checkout session. This is typically a hosted checkout page managed by Monime.
     */
    redirectUrl?: string;
    /**
     * The URL to redirect the customer to if they cancel the checkout process before completing payment. This typically returns the user to your site or app with context about the cancellation.
     */
    cancelUrl?: string;
    /**
     * The URL to redirect the customer to after successfully completing the checkout. Typically used to confirm the order or show a success message on your site or app.
     */
    successUrl?: string;
    /**
     * Container for the list of items included in the checkout session. Each item represents a product or service being purchased, along with its quantity and pricing.
     */
    lineItems?: {
        /**
         * Array of individual line items representing products or services included in the checkout session. Each item specifies details like name, quantity, and unit price.
         */
        data?: Array<({
            /**
             * Type of line item. This must be set to 'custom'.
             */
            type?: 'custom';
            /**
             * Unique internal identifier for this line item. This is generated by the system and cannot be provided by the user. Unique across all checkout sessions.
             */
            readonly id?: string;
            /**
             * Name of the product or service represented by this line item.
             */
            name: string;
            /**
             * Monetary value representing the price per unit of this item.
             */
            price: {
                /**
                 * The [3-letter](https://en.wikipedia.org/wiki/ISO_4217) ISO currency code. Currently supported: 'SLE', 'USD'
                 */
                currency?: string;
                /**
                 * The value representation in the currency's minor unit. E.g. For 1 Leone (SLE 1), the value should be 100, denoting cents, the minor unit.
                 */
                value?: number;
            };
            /**
             * Number of units being purchased. Must be between 1 and 100,000.
             */
            quantity?: number;
            /**
             * External system-provided identifier for this line item, used for cross-system tracking, reconciliation, or referencing purposes. Must be unique within the checkout session. If not provided, a unique identifier will be generated.
             */
            reference?: string | null;
            /**
             * Optional description providing additional details about the item.
             */
            description?: string | null;
            /**
             * Up to 3 image URLs visually representing this item.
             */
            images?: Array<string> | null;
        } | {
            type?: 'custom';
        })> | null;
    };
    /**
     * Financial account where the collected funds were settled. Defaults to the main account if omitted.
     */
    financialAccountId?: string | null;
    /**
     * Visual customization options for the checkout UI, such as color schemes or logos.
     */
    brandingOptions?: {
        /**
         * Primary brand color in hex format (e.g., '#00FF00') used to customize the appearance of the checkout interface.
         */
        primaryColor?: string;
    } | null;
    /**
     * The timestamp at which the checkout session will automatically expire.
     */
    expireTime?: string;
    /**
     * Timestamp indicating when the checkout session was created.
     */
    createTime?: string;
    /**
     * **Ownership graph** that traces the origin of this checkout session, enabling deep auditability and understanding of its creation context.
     */
    ownershipGraph?: {
        /**
         * **Immediate object** that owns this entity. This is the direct originator or source object.
         */
        readonly owner?: {
            /**
             * **Unique ID** of the object instance that owns this entity.
             */
            readonly id?: string;
            /**
             * **Type of the object** that owns this entity. Examples include: 'internal_transfer', 'checkout_session', 'payment_code'.
             */
            readonly type?: string;
            /**
             * **Arbitrary metadata** describing the owning object.
             */
            readonly metadata?: Record<string, any> | null;
            owner?: CoreresourcesParentOwningObject;
        };
    } | null;
    /**
     * Structured key-value metadata for tagging the session with contextual or custom information.
     */
    metadata?: Record<string, any> | null;
};
export namespace CheckoutSession {
    /**
     * **Status** of the checkout session. Possible values:
     * - pending: Awaiting initiation.
     * - completed: Checkout completed successfully.
     * - cancelled: User cancelled the session.
     * - expired: Session expired due to inactivity.
     */
    export enum status {
        PENDING = 'pending',
        CANCELLED = 'cancelled',
        EXPIRED = 'expired',
        COMPLETED = 'completed',
    }
}

